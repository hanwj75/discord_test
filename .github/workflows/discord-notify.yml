name: Discord 알림

on:
  pull_request:
    types: [opened, synchronize, closed, reopened, ready_for_review]
  push:
    branches: [main, develop]

jobs:
  discord-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Discord 알림 전송
        run: |
          # Discord Webhook URL (GitHub Secrets에서 가져옴)
          DISCORD_WEBHOOK_URL="${{ secrets.DISCORD_WEBHOOK_URL }}"

          # 이벤트 타입에 따라 메시지 구성
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # PR 이벤트
            ACTION="${{ github.event.action }}"
            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_URL="${{ github.event.pull_request.html_url }}"
            AUTHOR="${{ github.event.pull_request.user.login }}"
            REPO="${{ github.repository }}"
            
            case $ACTION in
              "opened")
                MESSAGE="🔔 **새로운 PR이 생성되었습니다!**\n\n📁 **저장소:** $REPO\n🙋 **작성자:** $AUTHOR\n📝 **제목:** $PR_TITLE\n🔗 **링크:** $PR_URL"
                ;;
              "closed")
                if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
                  MESSAGE="✅ **PR이 머지되었습니다!**\n\n📁 **저장소:** $REPO\n🙋 **작성자:** $AUTHOR\n📝 **제목:** $PR_TITLE\n🔗 **링크:** $PR_URL"
                else
                  MESSAGE="❌ **PR이 닫혔습니다!**\n\n📁 **저장소:** $REPO\n🙋 **작성자:** $AUTHOR\n📝 **제목:** $PR_TITLE\n🔗 **링크:** $PR_URL"
                fi
                ;;
              "reopened")
                MESSAGE="🔄 **PR이 다시 열렸습니다!**\n\n📁 **저장소:** $REPO\n🙋 **작성자:** $AUTHOR\n📝 **제목:** $PR_TITLE\n🔗 **링크:** $PR_URL"
                ;;
              *)
                MESSAGE="📝 **PR이 업데이트되었습니다!**\n\n📁 **저장소:** $REPO\n🙋 **작성자:** $AUTHOR\n📝 **제목:** $PR_TITLE\n🔗 **링크:** $PR_URL"
                ;;
            esac
          else
            # Push 이벤트
            COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
            COMMIT_URL="${{ github.event.head_commit.url }}"
            AUTHOR="${{ github.event.head_commit.author.name }}"
            REPO="${{ github.repository }}"
            BRANCH="${{ github.ref_name }}"
            
            MESSAGE="🚀 **새로운 커밋이 푸시되었습니다!**\n\n📁 **저장소:** $REPO\n🌿 **브랜치:** $BRANCH\n🙋 **작성자:** $AUTHOR\n📝 **커밋 메시지:** $COMMIT_MESSAGE\n🔗 **링크:** $COMMIT_URL"
          fi

          # Discord로 메시지 전송
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\":\"$MESSAGE\"}" \
               "$DISCORD_WEBHOOK_URL"
